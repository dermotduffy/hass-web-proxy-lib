name: "CI"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  DEFAULT_PYTHON: "3.12"

jobs:
  tests:
    runs-on: "ubuntu-latest"
    name: Tests
    steps:
      - name: Check out code from GitHub
        uses: "actions/checkout@v4.2.2"
      - name: Setup Python ${{ env.DEFAULT_PYTHON }}
        uses: "actions/setup-python@v5.3.0"
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Set up poetry
        uses: snok/install-poetry@v1.4.1
      - name: "Set up dependencies"
        run: poetry install --no-interaction
      - name: Tests suite
        run: |
          poetry run pytest -p no:sugar
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
          verbose: true

  lint:
    runs-on: "ubuntu-latest"
    name: Lint
    steps:
      - name: Check out code from GitHub
        uses: "actions/checkout@v4.2.2"
      - name: Setup Python ${{ env.DEFAULT_PYTHON }}
        uses: "actions/setup-python@v5.3.0"
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Set up poetry
        uses: snok/install-poetry@v1.4.1
      - name: "Set up dependencies"
        run: poetry install --no-interaction
      - name: "Lint"
        run: poetry run ruff check .
      - name: "Format"
        run: poetry run ruff format . --check


  mypy:
    runs-on: "ubuntu-latest"
    name: Typing
    steps:
      - name: Check out code from GitHub
        uses: "actions/checkout@v4.2.2"
      - name: Setup Python ${{ env.DEFAULT_PYTHON }}
        uses: "actions/setup-python@v5.3.0"
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Set up poetry
        uses: snok/install-poetry@v1.4.1
      - name: "Set up dependencies"
        run: poetry install --no-interaction
      - name: "mypy"
        run: poetry run mypy .
      